alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'

alias reload='. ~/.zshrc'
alias sudo='sudo '
alias cls='clear'

function mkcd () { mkdir $@ && cd $@ }
function count () { ls -1 $@ | wc -l }

alias history='fc -il 1'
alias ick='ack -i --pager="less -R -S -X"'

#
# OSX aliases
#
function open_command() {
  emulate -L zsh
  setopt shwordsplit

  local open_cmd

  # define the open command
  case "$OSTYPE" in
    darwin*)  open_cmd='open' ;;
    cygwin*)  open_cmd='cygstart' ;;
    linux*)   open_cmd='xdg-open' ;;
    msys*)    open_cmd='start ""' ;;
    *)        echo "Platform $OSTYPE not supported"
              return 1
              ;;
  esac

  # don't use nohup on OSX
  if [[ "$OSTYPE" == darwin* ]]; then
    $open_cmd "$@" &>/dev/null
  else
    nohup $open_cmd "$@" &>/dev/null
  fi
}

# Open Finder directory
alias ofd='open_command $PWD'

# Print Finder directory
function pfd() {
  osascript 2>/dev/null <<EOF
    tell application "Finder"
      return POSIX path of (target of window 1 as alias)
    end tell
EOF
}

# Print Finder selection
function pfs() {
  osascript 2>/dev/null <<EOF
    set output to ""
    tell application "Finder" to set the_selection to selection
    set item_count to count the_selection
    repeat with item_index from 1 to count the_selection
      if item_index is less than item_count then set the_delimiter to "\n"
      if item_index is item_count then set the_delimiter to ""
      set output to output & ((item item_index of the_selection as alias)'s POSIX path) & the_delimiter
    end repeat
EOF
}

# Change to Finder directory
function cdf() {
  cd "$(pfd)"
}

alias cleanup='find . -name ".DS_Store" -depth -exec rm {} \;'

# requires `npm install -g trash-cli`
alias rm='trash'

# transfer.sh
# Easy file sharing from the command line
# https://transfer.sh
#
# Defines transfer alias and provides easy command line file and folder sharing.
#
# Authors:
#   Remco Verhoef <remco@dutchcoders.io>
#

curl --version 2>&1 > /dev/null
if [ $? -ne 0 ]; then
  echo "Could not find curl. (Required for transfer.sh)"
  return 1
fi

transfer() {
    # check arguments
    if [ $# -eq 0 ];
    then
        echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"
        return 1
    fi

    # get temporarily filename, output is written to this file show progress can be showed
    tmpfile=$( mktemp -t transferXXX )

    # upload stdin or file
    file=$1

    if tty -s;
    then
        basefile=$(basename "$file" | sed -e 's/[^a-zA-Z0-9._-]/-/g')

        if [ ! -e $file ];
        then
            echo "File $file doesn't exists."
            return 1
        fi

        if [ -d $file ];
        then
            # zip directory and transfer
            zipfile=$( mktemp -t transferXXX.zip )
            cd $(dirname $file) && zip -r -q - $(basename $file) >> $zipfile
            curl --progress-bar --upload-file "$zipfile" "https://transfer.sh/$basefile.zip" >> $tmpfile
            rm -f $zipfile
        else
            # transfer file
            curl --progress-bar --upload-file "$file" "https://transfer.sh/$basefile" >> $tmpfile
        fi
    else
        # transfer pipe
        curl --progress-bar --upload-file "-" "https://transfer.sh/$file" >> $tmpfile
    fi

    # cat output link
    cat $tmpfile

    # cleanup
    rm -f $tmpfile
}


#
# git aliases
#

alias git='hub'
alias g='git'
alias ga='git add'
alias gaa='git add --all'
alias gap='git add --patch'
alias gau='git add --update'
alias gb='git branch'
alias gc='git commit -v'
alias gc!='git commit -v --amend'
alias gcl='git clone --recursive'
alias gco='git checkout'
alias gd='git diff'
alias gp='git push'
alias gp!='git push --force'
alias gl='git pull'
alias gr="git remote -v"
alias grup='git remote -v update'
alias gs='git status -s' # Potential Ghostscript conflict
alias gst='git status'
alias gup='git pull --rebase'
alias glg="git log --stat"
alias glog="git log --graph --format='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

alias gss='git stash save'
alias gsu='git stash save --include-untracked'
alias gsa='git stash apply'
alias gsc='git stash clear'
alias gsd='git stash drop'
alias gsl="git --no-pager stash list --format='%C(magenta)%C(bold)%gd%Creset: %gs%Creset'"
alias gsp='git stash pop'
alias gssh='git stash show --text'

alias gwip='git checkout -b wip_branch && git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify -m "--wip-- [skip ci]"'
alias gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1 && git checkout master && git branch -d wip_branch'
alias gpwip='git branch | grep -q -c "* wip_branch" && git push --no-verify --set-upstream origin wip_branch'
alias glwip='git checkout -b wip_branch origin/wip_branch'
alias gdwip='git push origin --delete wip_branch'
alias gldwip='git checkout -b wip_branch origin/wip_branch && git push origin --delete wip_branch'